<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hugo tranquilpeak theme</title>
    <link>https://yfjie.github.io/post/</link>
    <description>Recent content in Posts on Hugo tranquilpeak theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://yfjie.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://yfjie.github.io/post/notion-linux-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yfjie.github.io/post/notion-linux-command/</guid>
      <description>Linux command 安装Anaconda：
https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/?C=M&amp;amp;O=D （首先从清华源下载安装包）
./Anaconda3-2021.11-Linux-x86_64.sh # ubuntu、ContOS等 source ~/.bashrc # 激活 conda -V # 检查是否安装成功 Linux Ubuntu Conda 虚拟环境 激活
1、未进入虚拟环境时：
直接 conda activate env_name
2、在虚拟环境中时
执行两次source deactivate命令
（或两次 conda deactivate命令）
conda -h # 查看帮助 conda config -h conda config --show-sources # 查看镜像源 conda create -n env_name python=version_number # 修改镜像源 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ vim ~/.condarc # 直接编辑配置文件 channels: - https://mirrors.ustc.edu.cn/anaconda/pkgs/main/ - https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ - defaults # 安装包 pip install pkg_name==xxx wsl使用</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yfjie.github.io/post/%E7%99%BE%E5%BA%A6paddle-fluid.layers.fc-api%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yfjie.github.io/post/%E7%99%BE%E5%BA%A6paddle-fluid.layers.fc-api%E8%AF%B4%E6%98%8E/</guid>
      <description>学习百度的PaddlePaddle框架时，看到第一个线性回归的例子，对其中的fluid.layers.fc()函数使用有点困惑，查看官方API文档，感觉写的也不是特别清晰（可能是我理解的不好），经过一些思考后感觉应该是理解了，这里做一下总结。 下面是部分代码：
# 定义X数值 train_data=numpy.array([[1.0], [2.0], [3.0], [4.0]]).astype(&amp;#39;float32&amp;#39;) # 定义期望预测的真实值y_true y_true = numpy.array([[2.0], [4.0], [6.0], [8.0]]).astype(&amp;#39;float32&amp;#39;) # 定义输入数据类型 x = fluid.data(name=&amp;#34;x&amp;#34;, shape=[None, 1], dtype=&amp;#39;float32&amp;#39;) y = fluid.data(name=&amp;#34;y&amp;#34;, shape=[None, 1], dtype=&amp;#39;float32&amp;#39;) # 搭建全连接网络 y_predict = fluid.layers.fc(input=x, size=1, act=None) fluid.layers.fc接口如下
paddle.fluid.layers.fc(input, size, num_flatten_dims=1, param_attr=None, bias_attr=None, act=None, name=None) 参数说明: input ：多维Tensor或多个Tensor组成的list，输入Tensor的shape至少是2。 size： 全连接层输出单元的数目，即输出Tensor的特征维度。 num_flatten_dims(int)：在计算时，输入首先会被扁平化（flatten）为一个二维矩阵，之后再与权重(weights)相乘。参数 num_flatten_dims 决定了输入Tensor的flatten方式。 param_attr：指定权重参数属性的对象。默认值为None，表示使用默认的权重参数属性。 bias_attr：指定偏置参数属性的对象。默认值为None，表示使用默认的偏置参数属性。 act：应用于输出上的激活函数，如tanh、softmax、sigmoid，relu等。 name(str，可选)：一般无需设置，默认值为None。
fluid.layers.fc函数重点是前三个参数，输入Tensor的shape至少是2是理解这个API的核心，具体是不管输入Tensor的shape是多少，都会根据num_flatten_dims扁平化为二维矩阵，其中第一维是batch_size，第二维是输入Tensor的特征维度，计算时与一个权重矩阵相乘，输出shape为 [batch_size,size]的Tensor。
例如， 假设X是一个五维的Tensor，其shape为(2, 3, 4, 5, 6), 若 num_flatten_dims=3，则扁平化的矩阵shape为： (2x3x4,5x6)=(24,30) ，最终输出Tensor的shape为 (24,size) 。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://yfjie.github.io/post/%E7%99%BE%E5%BA%A6paddlepaddle%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yfjie.github.io/post/%E7%99%BE%E5%BA%A6paddlepaddle%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
      <description>一直想学习一下百度的paddle框架，按照官方教程安装时，感觉步骤写的太繁琐，于是根据之前安装其他框架的经验进行尝试，使用最简单的anaconda方式进行安装，很快成功，记录一下过程。
一、	安装准备
anaconda CUDA10.0、cudnn paddlepaddle-gpu离线包（选择红色框选中的） url：https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/Paddle/ 二、安装步骤 1.创建虚拟环境 conda create -n paddle_env python=3.5 2.激活环境 activate paddle_env 3.安装paddle框架 conda install paddlepaddle-gpu-1.6.2-py35_gpu_cuda10.0_windows.tar.bz2 (注意：使用pip install 命令安装会报错，原因还不清楚) 4.安装环境验证 使用python进入python解释器，输入import paddle.fluid，再输入 paddle.fluid.install_check.run_check()。如果出现“Your Paddle Fluid is installed succesfully!”，说明成功安装。 (说明：输入import paddle.fluid可能会报错，提示找不到某些包，pip install 进行安装即可) 比如提示找不到‘nltk’包 pip 命令安装 </description>
    </item>
    
  </channel>
</rss>
